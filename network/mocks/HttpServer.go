// Code generated by mockery v1.0.0
package mocks

import http "net/http"
import mock "github.com/stretchr/testify/mock"

// HttpServer is an autogenerated mock type for the HttpServer type
type HttpServer struct {
	mock.Mock
}

// Get provides a mock function with given fields: url
func (_m *HttpServer) Get(url string) (*http.Response, error) {
	ret := _m.Called(url)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(string) *http.Response); ok {
		r0 = rf(url)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(url)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Handle provides a mock function with given fields: pattern, handler
func (_m *HttpServer) Handle(pattern string, handler http.Handler) {
	_m.Called(pattern, handler)
}

// HandleFunc provides a mock function with given fields: pattern, handler
func (_m *HttpServer) HandleFunc(pattern string, handler func(http.ResponseWriter, *http.Request)) {
	_m.Called(pattern, handler)
}

// ListenAndServe provides a mock function with given fields: addr, handler
func (_m *HttpServer) ListenAndServe(addr string, handler http.Handler) error {
	ret := _m.Called(addr, handler)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, http.Handler) error); ok {
		r0 = rf(addr, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
